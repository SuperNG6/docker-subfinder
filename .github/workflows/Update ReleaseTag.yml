name: Update ReleaseTag

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * 5'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      # 获得最新release tag，cut切割无关内容。输出tag给之后的步骤
      - name: Set Version
        id: set-version
        run: |
          TAG=$(wget --no-check-certificate -qO- https://api.github.com/repos/ausaki/subfinder/tags | grep 'name' | cut -d\" -f4 | head -1 | cut -c 2- )
          echo "ReleaseTag=${TAG}"  
          echo "::set-output name=version::${TAG}"

      # 缓存release tag，用作与下一次执行任务时获取到到release tag做对比
      - name: Cache tag
        id: cache-tag
        uses: actions/cache@v2
        with:
          path: ./tag/
          key: ${{ runner.os }}-tag-${{ steps.set-version.outputs.version }}

      # 获取将latest release tag，未命中缓存则更新ReleaseTag
      - name: Get latest release tag
        id: get-release-tag
        if: steps.cache-tag.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./tag
          echo ${{ steps.set-version.outputs.version }} > ./tag/tag-${{ steps.set-version.outputs.version }}
          echo "::set-output name=status::success"

      # 将latest release tag写入到./ReleaseTag
      - name: Update ReleaseTag
        if: steps.get-release-tag.outputs.status == 'success'
        run: |
          echo ${{ steps.set-version.outputs.version }} > ./ReleaseTag

      # push到GitHub的项目当中
      - name: Push
        if: steps.get-release-tag.outputs.status == 'success'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update ReleaseTag ${{ steps.set-version.outputs.version }}"
          git push -v --progress
